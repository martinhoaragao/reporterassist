// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;

using Shared;
using Foundation;
using AppKit;

namespace Mac
{
	public partial class View : NSViewController
	{
		private Shared.ReporterAssist reporter;
		private bool logado = false;
		public View (IntPtr handle) : base (handle)
		{
		}

		public override void AwakeFromNib()
		{
			base.AwakeFromNib();
			LoginLabel.Hidden = true;
			LogoutButton.Hidden = true;
			TrabalhosView.Hidden = true;
			TarefasView.Hidden = true;
		}

		private DateTime NSDateToDateTime(NSDate date)
		{
			DateTime reference = new DateTime(2001, 1, 1, 0, 0, 0);
			DateTime currentDate = reference.AddSeconds(date.SecondsSinceReferenceDate);
			DateTime localDate = currentDate.ToLocalTime();
			return localDate;
		}

		private void updateTrabalhosPopUp()
		{
			List<Project> projetos = reporter.Projects;
			TrabalhosPop.RemoveAllItems();
			foreach (Project proj in projetos)
			{
				TrabalhosPop.AddItem(proj.Title);
			}
		}

		partial void LoginAction(NSObject sender)
		{
			reporter = new Shared.ReporterAssist();
			string user = UsernameText.StringValue;
			string pass = PasswordText.StringValue;

			//Fazer login FIXIT

			//login bem sucedido
			logado = true;

			if (logado)
			{
				TrabalhosView.Hidden = false;
				TarefasView.Hidden = false;
				LoginButton.Hidden = true;
				LogoutButton.Hidden = false;
				LoginLabel.StringValue = "Autenticado com sucesso";
				LoginLabel.Hidden = false;

				updateTrabalhosPopUp();
			}
			else {
				LoginLabel.StringValue = "Username e/ou Password errada";
				LoginLabel.Hidden = false;
			}

		}

		partial void LogoutAction(NSObject sender)
		{
			reporter = null;
			LoginButton.Hidden = false;
			LoginLabel.StringValue = "Lougout feito com sucesso";
			LogoutButton.Hidden = true;
			LoginLabel.Hidden = false;
			TrabalhosView.Hidden = true;
			TarefasView.Hidden = true;
		}

		partial void NovoTrabalhoAction(NSObject sender)
		{
			string titulo = NovoTrabalhoTitulo.StringValue;
			string descricao = NovoTrabalhoDescricao.StringValue;
			DateTime inicio = NSDateToDateTime(NovoTrabalhoInicio.DateValue);
			DateTime fim;
			if (CheckFim.State == NSCellStateValue.On)
			{
				fim = NSDateToDateTime(NovoTrabalhoFim.DateValue);
			}
			else {
				fim = new DateTime();
			}
			reporter.AddProject(titulo, descricao, inicio, fim);
			updateTrabalhosPopUp();
		}
	}
}
